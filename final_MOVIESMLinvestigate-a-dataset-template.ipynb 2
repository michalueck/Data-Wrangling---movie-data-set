{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "# Project: Analysis of the TMDBmovie data \n",
    "\n",
    "## Table of Contents\n",
    "<ul>\n",
    "<li><a href=\"#intro\">Introduction</a></li>\n",
    "<li><a href=\"#wrangling\">Data Wrangling</a></li>\n",
    "<li><a href=\"#eda\">Exploratory Data Analysis</a></li>\n",
    "<li><a href=\"#conclusions\">Conclusions</a></li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<a id='intro'></a>\n",
    "# Introduction\n",
    "\n",
    ">for the first project to become a Data Analyst I choose the TMDBmovie data set. This looks intersting to me as I like movies and some intersting questions come up. The original data come from kaggle. According to their website the meta data for around 5000 movies is provided. It is described that the background for the data basis is to find out: 'what can we say about the success of a movie before it is released?'\n",
    " \n",
    "\n",
    "   ### Which genres are the most popular ones and is there any development over the years?\n",
    "    checking on popularity and genres \n",
    "\n",
    "   ### What is success? Is there a correlation between the revenue and the popularity? Or can popular movies even be a non success on the financial aspect?\n",
    "    checking on budget, revenue and popularity \n",
    "    \n",
    "   ### I like to find out, is there a 'hidden recepie'in terms of actor or director? \n",
    "     checking on revenue, actors, directors\n",
    "     \n",
    ">I found one limitation one the data before performing analyis. The fields are filled out by users, so there is a risk the data is not complete and it could contain faulty entries (source: www.kaggle.com: or example, this IMDB entry has basically no accurate information at all) \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing the needed libraries\n",
    "\n",
    "import pandas as pd               #data processing - f.e. pd.read_csv, library for data manipulation\n",
    "import numpy as np                #linear algebra, provides numerical arrays and functions for arry manipulation \n",
    "import matplotlib.pyplot as plt   #for visualisation, library \n",
    "import seaborn as sns             #for visualisation support \n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "\n",
    "from wordcloud import WordCloud, STOPWORDS #nice visualisation from amueller\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='wrangling'></a>\n",
    "## Data Wrangling\n",
    "\n",
    "> **Tip**: In this section of the report, you will load in the data, check for cleanliness, and then trim and clean your dataset for analysis. Make sure that you document your steps carefully and justify your cleaning decisions.\n",
    "\n",
    "### General Properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#import the movie data from csv, setting index column \n",
    "df=pd.read_csv('tmdb-movies.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10866, 21)\n"
     ]
    }
   ],
   "source": [
    "#first look on rows and columns \n",
    "print (df.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "result displays dataframe is containing 10866 rows and 21 columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10856"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#number of unique movies\n",
    "movies = df ['imdb_id'].unique()\n",
    "len(movies)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The result of 10856 compared to 10866 implicates we have double entries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10866 entries, 0 to 10865\n",
      "Data columns (total 21 columns):\n",
      "id                      10866 non-null int64\n",
      "imdb_id                 10856 non-null object\n",
      "popularity              10866 non-null float64\n",
      "budget                  10866 non-null int64\n",
      "revenue                 10866 non-null int64\n",
      "original_title          10866 non-null object\n",
      "cast                    10790 non-null object\n",
      "homepage                2936 non-null object\n",
      "director                10822 non-null object\n",
      "tagline                 8042 non-null object\n",
      "keywords                9373 non-null object\n",
      "overview                10862 non-null object\n",
      "runtime                 10866 non-null int64\n",
      "genres                  10843 non-null object\n",
      "production_companies    9836 non-null object\n",
      "release_date            10866 non-null object\n",
      "vote_count              10866 non-null int64\n",
      "vote_average            10866 non-null float64\n",
      "release_year            10866 non-null int64\n",
      "budget_adj              10866 non-null float64\n",
      "revenue_adj             10866 non-null float64\n",
      "dtypes: float64(4), int64(6), object(11)\n",
      "memory usage: 1.7+ MB\n"
     ]
    }
   ],
   "source": [
    "#investigation on data types\n",
    "df.info ()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>imdb_id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>cast</th>\n",
       "      <th>homepage</th>\n",
       "      <th>director</th>\n",
       "      <th>tagline</th>\n",
       "      <th>...</th>\n",
       "      <th>overview</th>\n",
       "      <th>runtime</th>\n",
       "      <th>genres</th>\n",
       "      <th>production_companies</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>135397</td>\n",
       "      <td>tt0369610</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...</td>\n",
       "      <td>http://www.jurassicworld.com/</td>\n",
       "      <td>Colin Trevorrow</td>\n",
       "      <td>The park is open.</td>\n",
       "      <td>...</td>\n",
       "      <td>Twenty-two years after the events of Jurassic ...</td>\n",
       "      <td>124</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Universal Studios|Amblin Entertainment|Legenda...</td>\n",
       "      <td>6/9/15</td>\n",
       "      <td>5562</td>\n",
       "      <td>6.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.379999e+08</td>\n",
       "      <td>1.392446e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>76341</td>\n",
       "      <td>tt1392190</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...</td>\n",
       "      <td>http://www.madmaxmovie.com/</td>\n",
       "      <td>George Miller</td>\n",
       "      <td>What a Lovely Day.</td>\n",
       "      <td>...</td>\n",
       "      <td>An apocalyptic story set in the furthest reach...</td>\n",
       "      <td>120</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Village Roadshow Pictures|Kennedy Miller Produ...</td>\n",
       "      <td>5/13/15</td>\n",
       "      <td>6185</td>\n",
       "      <td>7.1</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.379999e+08</td>\n",
       "      <td>3.481613e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>262500</td>\n",
       "      <td>tt2908446</td>\n",
       "      <td>13.112507</td>\n",
       "      <td>110000000</td>\n",
       "      <td>295238201</td>\n",
       "      <td>Insurgent</td>\n",
       "      <td>Shailene Woodley|Theo James|Kate Winslet|Ansel...</td>\n",
       "      <td>http://www.thedivergentseries.movie/#insurgent</td>\n",
       "      <td>Robert Schwentke</td>\n",
       "      <td>One Choice Can Destroy You</td>\n",
       "      <td>...</td>\n",
       "      <td>Beatrice Prior must confront her inner demons ...</td>\n",
       "      <td>119</td>\n",
       "      <td>Adventure|Science Fiction|Thriller</td>\n",
       "      <td>Summit Entertainment|Mandeville Films|Red Wago...</td>\n",
       "      <td>3/18/15</td>\n",
       "      <td>2480</td>\n",
       "      <td>6.3</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.012000e+08</td>\n",
       "      <td>2.716190e+08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       id    imdb_id  popularity     budget     revenue      original_title  \\\n",
       "0  135397  tt0369610   32.985763  150000000  1513528810      Jurassic World   \n",
       "1   76341  tt1392190   28.419936  150000000   378436354  Mad Max: Fury Road   \n",
       "2  262500  tt2908446   13.112507  110000000   295238201           Insurgent   \n",
       "\n",
       "                                                cast  \\\n",
       "0  Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...   \n",
       "1  Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...   \n",
       "2  Shailene Woodley|Theo James|Kate Winslet|Ansel...   \n",
       "\n",
       "                                         homepage          director  \\\n",
       "0                   http://www.jurassicworld.com/   Colin Trevorrow   \n",
       "1                     http://www.madmaxmovie.com/     George Miller   \n",
       "2  http://www.thedivergentseries.movie/#insurgent  Robert Schwentke   \n",
       "\n",
       "                      tagline      ...       \\\n",
       "0           The park is open.      ...        \n",
       "1          What a Lovely Day.      ...        \n",
       "2  One Choice Can Destroy You      ...        \n",
       "\n",
       "                                            overview runtime  \\\n",
       "0  Twenty-two years after the events of Jurassic ...     124   \n",
       "1  An apocalyptic story set in the furthest reach...     120   \n",
       "2  Beatrice Prior must confront her inner demons ...     119   \n",
       "\n",
       "                                      genres  \\\n",
       "0  Action|Adventure|Science Fiction|Thriller   \n",
       "1  Action|Adventure|Science Fiction|Thriller   \n",
       "2         Adventure|Science Fiction|Thriller   \n",
       "\n",
       "                                production_companies release_date vote_count  \\\n",
       "0  Universal Studios|Amblin Entertainment|Legenda...       6/9/15       5562   \n",
       "1  Village Roadshow Pictures|Kennedy Miller Produ...      5/13/15       6185   \n",
       "2  Summit Entertainment|Mandeville Films|Red Wago...      3/18/15       2480   \n",
       "\n",
       "   vote_average  release_year    budget_adj   revenue_adj  \n",
       "0           6.5          2015  1.379999e+08  1.392446e+09  \n",
       "1           7.1          2015  1.379999e+08  3.481613e+08  \n",
       "2           6.3          2015  1.012000e+08  2.716190e+08  \n",
       "\n",
       "[3 rows x 21 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#preview on the first 3 lines of data \n",
    "df.head(3)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>10866.000000</td>\n",
       "      <td>1.086600e+04</td>\n",
       "      <td>1.086600e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>66064.177434</td>\n",
       "      <td>0.646441</td>\n",
       "      <td>1.462570e+07</td>\n",
       "      <td>3.982332e+07</td>\n",
       "      <td>102.070863</td>\n",
       "      <td>217.389748</td>\n",
       "      <td>5.974922</td>\n",
       "      <td>2001.322658</td>\n",
       "      <td>1.755104e+07</td>\n",
       "      <td>5.136436e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>92130.136561</td>\n",
       "      <td>1.000185</td>\n",
       "      <td>3.091321e+07</td>\n",
       "      <td>1.170035e+08</td>\n",
       "      <td>31.381405</td>\n",
       "      <td>575.619058</td>\n",
       "      <td>0.935142</td>\n",
       "      <td>12.812941</td>\n",
       "      <td>3.430616e+07</td>\n",
       "      <td>1.446325e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>0.000065</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1960.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>10596.250000</td>\n",
       "      <td>0.207583</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>5.400000</td>\n",
       "      <td>1995.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>20669.000000</td>\n",
       "      <td>0.383856</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>99.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2006.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>75610.000000</td>\n",
       "      <td>0.713817</td>\n",
       "      <td>1.500000e+07</td>\n",
       "      <td>2.400000e+07</td>\n",
       "      <td>111.000000</td>\n",
       "      <td>145.750000</td>\n",
       "      <td>6.600000</td>\n",
       "      <td>2011.000000</td>\n",
       "      <td>2.085325e+07</td>\n",
       "      <td>3.369710e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>417859.000000</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>4.250000e+08</td>\n",
       "      <td>2.781506e+09</td>\n",
       "      <td>900.000000</td>\n",
       "      <td>9767.000000</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>4.250000e+08</td>\n",
       "      <td>2.827124e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  id    popularity        budget       revenue       runtime  \\\n",
       "count   10866.000000  10866.000000  1.086600e+04  1.086600e+04  10866.000000   \n",
       "mean    66064.177434      0.646441  1.462570e+07  3.982332e+07    102.070863   \n",
       "std     92130.136561      1.000185  3.091321e+07  1.170035e+08     31.381405   \n",
       "min         5.000000      0.000065  0.000000e+00  0.000000e+00      0.000000   \n",
       "25%     10596.250000      0.207583  0.000000e+00  0.000000e+00     90.000000   \n",
       "50%     20669.000000      0.383856  0.000000e+00  0.000000e+00     99.000000   \n",
       "75%     75610.000000      0.713817  1.500000e+07  2.400000e+07    111.000000   \n",
       "max    417859.000000     32.985763  4.250000e+08  2.781506e+09    900.000000   \n",
       "\n",
       "         vote_count  vote_average  release_year    budget_adj   revenue_adj  \n",
       "count  10866.000000  10866.000000  10866.000000  1.086600e+04  1.086600e+04  \n",
       "mean     217.389748      5.974922   2001.322658  1.755104e+07  5.136436e+07  \n",
       "std      575.619058      0.935142     12.812941  3.430616e+07  1.446325e+08  \n",
       "min       10.000000      1.500000   1960.000000  0.000000e+00  0.000000e+00  \n",
       "25%       17.000000      5.400000   1995.000000  0.000000e+00  0.000000e+00  \n",
       "50%       38.000000      6.000000   2006.000000  0.000000e+00  0.000000e+00  \n",
       "75%      145.750000      6.600000   2011.000000  2.085325e+07  3.369710e+07  \n",
       "max     9767.000000      9.200000   2015.000000  4.250000e+08  2.827124e+09  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#looking at some standard figures\n",
    "df.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "id                                                                 135397\n",
      "imdb_id                                                         tt0369610\n",
      "popularity                                                        32.9858\n",
      "budget                                                          150000000\n",
      "revenue                                                        1513528810\n",
      "original_title                                             Jurassic World\n",
      "cast                    Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...\n",
      "homepage                                    http://www.jurassicworld.com/\n",
      "director                                                  Colin Trevorrow\n",
      "tagline                                                 The park is open.\n",
      "keywords                monster|dna|tyrannosaurus rex|velociraptor|island\n",
      "overview                Twenty-two years after the events of Jurassic ...\n",
      "runtime                                                               124\n",
      "genres                          Action|Adventure|Science Fiction|Thriller\n",
      "production_companies    Universal Studios|Amblin Entertainment|Legenda...\n",
      "release_date                                                       6/9/15\n",
      "vote_count                                                           5562\n",
      "vote_average                                                          6.5\n",
      "release_year                                                         2015\n",
      "budget_adj                                                       1.38e+08\n",
      "revenue_adj                                                   1.39245e+09\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#accessing the first movie data set to see if there is any strange data to be seen \n",
    "print (df.iloc [0])\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "### Data Cleaning (Replace this with more specific notes!)\n",
    "\n",
    " 1. checking for any rows which are null\n",
    " 2. dropping duplicates\n",
    " 3. dropping Null values in cast, director and genres \n",
    " 4. checking on Null data in the budget column \n",
    "  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                      False\n",
       "imdb_id                  True\n",
       "popularity              False\n",
       "budget                  False\n",
       "revenue                 False\n",
       "original_title          False\n",
       "cast                     True\n",
       "homepage                 True\n",
       "director                 True\n",
       "tagline                  True\n",
       "keywords                 True\n",
       "overview                 True\n",
       "runtime                 False\n",
       "genres                   True\n",
       "production_companies     True\n",
       "release_date            False\n",
       "vote_count              False\n",
       "vote_average            False\n",
       "release_year            False\n",
       "budget_adj              False\n",
       "revenue_adj             False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#is any row null?\n",
    "df.isnull().any()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "there are zero entries in cast, homepage,......\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropping the duplicates as found in data discussion \n",
    "df.drop_duplicates(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#dropping the NULL values in cast, director and genere columns for tidyness\n",
    "val_drop = ['cast', 'director', 'genres']\n",
    "df.dropna (subset = val_drop, how = 'any', inplace = True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>imdb_id</th>\n",
       "      <th>popularity</th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>cast</th>\n",
       "      <th>homepage</th>\n",
       "      <th>director</th>\n",
       "      <th>tagline</th>\n",
       "      <th>...</th>\n",
       "      <th>overview</th>\n",
       "      <th>runtime</th>\n",
       "      <th>genres</th>\n",
       "      <th>production_companies</th>\n",
       "      <th>release_date</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>release_year</th>\n",
       "      <th>budget_adj</th>\n",
       "      <th>revenue_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>280996</td>\n",
       "      <td>tt3168230</td>\n",
       "      <td>3.927333</td>\n",
       "      <td>0</td>\n",
       "      <td>29355203</td>\n",
       "      <td>Mr. Holmes</td>\n",
       "      <td>Ian McKellen|Milo Parker|Laura Linney|Hattie M...</td>\n",
       "      <td>http://www.mrholmesfilm.com/</td>\n",
       "      <td>Bill Condon</td>\n",
       "      <td>The man behind the myth</td>\n",
       "      <td>...</td>\n",
       "      <td>The story is set in 1947, following a long-ret...</td>\n",
       "      <td>103</td>\n",
       "      <td>Mystery|Drama</td>\n",
       "      <td>BBC Films|See-Saw Films|FilmNation Entertainme...</td>\n",
       "      <td>6/19/15</td>\n",
       "      <td>425</td>\n",
       "      <td>6.4</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.700677e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>339527</td>\n",
       "      <td>tt1291570</td>\n",
       "      <td>3.358321</td>\n",
       "      <td>0</td>\n",
       "      <td>22354572</td>\n",
       "      <td>Solace</td>\n",
       "      <td>Abbie Cornish|Jeffrey Dean Morgan|Colin Farrel...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Afonso Poyart</td>\n",
       "      <td>A serial killer who can see your future, a psy...</td>\n",
       "      <td>...</td>\n",
       "      <td>A psychic doctor, John Clancy, works with an F...</td>\n",
       "      <td>101</td>\n",
       "      <td>Crime|Drama|Mystery</td>\n",
       "      <td>Eden Rock Media|FilmNation Entertainment|Flynn...</td>\n",
       "      <td>9/3/15</td>\n",
       "      <td>474</td>\n",
       "      <td>6.2</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.056620e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>284289</td>\n",
       "      <td>tt2911668</td>\n",
       "      <td>2.272044</td>\n",
       "      <td>0</td>\n",
       "      <td>45895</td>\n",
       "      <td>Beyond the Reach</td>\n",
       "      <td>Michael Douglas|Jeremy Irvine|Hanna Mangan Law...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Jean-Baptiste LÃ©onetti</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>A high-rolling corporate shark and his impover...</td>\n",
       "      <td>95</td>\n",
       "      <td>Thriller</td>\n",
       "      <td>Furthur Films</td>\n",
       "      <td>4/17/15</td>\n",
       "      <td>81</td>\n",
       "      <td>5.5</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.222338e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>347096</td>\n",
       "      <td>tt3478232</td>\n",
       "      <td>2.165433</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Mythica: The Darkspore</td>\n",
       "      <td>Melanie Stone|Kevin Sorbo|Adam Johnson|Jake St...</td>\n",
       "      <td>http://www.mythicamovie.com/#!blank/wufvh</td>\n",
       "      <td>Anne K. Black</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>When Teelaâ€™s sister is murdered and a powerf...</td>\n",
       "      <td>108</td>\n",
       "      <td>Action|Adventure|Fantasy</td>\n",
       "      <td>Arrowstorm Entertainment</td>\n",
       "      <td>6/24/15</td>\n",
       "      <td>27</td>\n",
       "      <td>5.1</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>308369</td>\n",
       "      <td>tt2582496</td>\n",
       "      <td>2.141506</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Me and Earl and the Dying Girl</td>\n",
       "      <td>Thomas Mann|RJ Cyler|Olivia Cooke|Connie Britt...</td>\n",
       "      <td>http://www.foxsearchlight.com/meandearlandthed...</td>\n",
       "      <td>Alfonso Gomez-Rejon</td>\n",
       "      <td>A Little Friendship Never Killed Anyone.</td>\n",
       "      <td>...</td>\n",
       "      <td>Greg is coasting through senior year of high s...</td>\n",
       "      <td>105</td>\n",
       "      <td>Comedy|Drama</td>\n",
       "      <td>Indian Paintbrush</td>\n",
       "      <td>6/12/15</td>\n",
       "      <td>569</td>\n",
       "      <td>7.7</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>301875</td>\n",
       "      <td>tt3289728</td>\n",
       "      <td>1.959765</td>\n",
       "      <td>0</td>\n",
       "      <td>2000000</td>\n",
       "      <td>Equals</td>\n",
       "      <td>Kristen Stewart|Nicholas Hoult|Guy Pearce|Jack...</td>\n",
       "      <td>http://equals-the-movie.com/</td>\n",
       "      <td>Drake Doremus</td>\n",
       "      <td>Find your equal.</td>\n",
       "      <td>...</td>\n",
       "      <td>A futuristic love story set in a world where e...</td>\n",
       "      <td>101</td>\n",
       "      <td>Drama|Romance|Science Fiction</td>\n",
       "      <td>Scott Free Productions|Infinite Frameworks Stu...</td>\n",
       "      <td>9/4/15</td>\n",
       "      <td>135</td>\n",
       "      <td>5.6</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.839999e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>370687</td>\n",
       "      <td>tt3608646</td>\n",
       "      <td>1.876037</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Mythica: The Necromancer</td>\n",
       "      <td>Melanie Stone|Adam Johnson|Kevin Sorbo|Nicola ...</td>\n",
       "      <td>http://www.mythicamovie.com/#!blank/y9ake</td>\n",
       "      <td>A. Todd Smith</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Mallister takes Thane prisoner and forces Mare...</td>\n",
       "      <td>0</td>\n",
       "      <td>Fantasy|Action|Adventure</td>\n",
       "      <td>Arrowstorm Entertainment|Camera 40 Productions...</td>\n",
       "      <td>12/19/15</td>\n",
       "      <td>11</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>258509</td>\n",
       "      <td>tt2974918</td>\n",
       "      <td>1.841779</td>\n",
       "      <td>0</td>\n",
       "      <td>233755553</td>\n",
       "      <td>Alvin and the Chipmunks: The Road Chip</td>\n",
       "      <td>Jason Lee|Justin Long|Bella Thorne|Matthew Gra...</td>\n",
       "      <td>http://www.foxmovies.com/movies/alvin-and-the-...</td>\n",
       "      <td>Walt Becker</td>\n",
       "      <td>Fast &amp; furry-ous</td>\n",
       "      <td>...</td>\n",
       "      <td>Through a series of misunderstandings, Alvin, ...</td>\n",
       "      <td>92</td>\n",
       "      <td>Adventure|Animation|Comedy|Family</td>\n",
       "      <td>Regency Enterprises|Fox 2000 Pictures|Sunswept...</td>\n",
       "      <td>12/17/15</td>\n",
       "      <td>278</td>\n",
       "      <td>5.7</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.150550e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>326359</td>\n",
       "      <td>tt4007502</td>\n",
       "      <td>1.724712</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Frozen Fever</td>\n",
       "      <td>Kristen Bell|Idina Menzel|Jonathan Groff|Josh ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Chris Buck|Jennifer Lee</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>On Anna's birthday, Elsa and Kristoff are dete...</td>\n",
       "      <td>8</td>\n",
       "      <td>Adventure|Animation|Family</td>\n",
       "      <td>Walt Disney Pictures|Walt Disney Animation Stu...</td>\n",
       "      <td>3/9/15</td>\n",
       "      <td>475</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>254302</td>\n",
       "      <td>tt0462335</td>\n",
       "      <td>1.661789</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>High-Rise</td>\n",
       "      <td>Tom Hiddleston|Sienna Miller|Jeremy Irons|Luke...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ben Wheatley</td>\n",
       "      <td>Leave the real world behind</td>\n",
       "      <td>...</td>\n",
       "      <td>Dr. Robert Laing is the newest resident of a l...</td>\n",
       "      <td>119</td>\n",
       "      <td>Action|Drama|Science Fiction</td>\n",
       "      <td>Ingenious Media|HanWay Films|Scope Pictures|Re...</td>\n",
       "      <td>9/26/15</td>\n",
       "      <td>161</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         id    imdb_id  popularity  budget    revenue  \\\n",
       "30   280996  tt3168230    3.927333       0   29355203   \n",
       "36   339527  tt1291570    3.358321       0   22354572   \n",
       "72   284289  tt2911668    2.272044       0      45895   \n",
       "74   347096  tt3478232    2.165433       0          0   \n",
       "75   308369  tt2582496    2.141506       0          0   \n",
       "88   301875  tt3289728    1.959765       0    2000000   \n",
       "92   370687  tt3608646    1.876037       0          0   \n",
       "95   258509  tt2974918    1.841779       0  233755553   \n",
       "100  326359  tt4007502    1.724712       0          0   \n",
       "101  254302  tt0462335    1.661789       0          0   \n",
       "\n",
       "                             original_title  \\\n",
       "30                               Mr. Holmes   \n",
       "36                                   Solace   \n",
       "72                         Beyond the Reach   \n",
       "74                   Mythica: The Darkspore   \n",
       "75           Me and Earl and the Dying Girl   \n",
       "88                                   Equals   \n",
       "92                 Mythica: The Necromancer   \n",
       "95   Alvin and the Chipmunks: The Road Chip   \n",
       "100                            Frozen Fever   \n",
       "101                               High-Rise   \n",
       "\n",
       "                                                  cast  \\\n",
       "30   Ian McKellen|Milo Parker|Laura Linney|Hattie M...   \n",
       "36   Abbie Cornish|Jeffrey Dean Morgan|Colin Farrel...   \n",
       "72   Michael Douglas|Jeremy Irvine|Hanna Mangan Law...   \n",
       "74   Melanie Stone|Kevin Sorbo|Adam Johnson|Jake St...   \n",
       "75   Thomas Mann|RJ Cyler|Olivia Cooke|Connie Britt...   \n",
       "88   Kristen Stewart|Nicholas Hoult|Guy Pearce|Jack...   \n",
       "92   Melanie Stone|Adam Johnson|Kevin Sorbo|Nicola ...   \n",
       "95   Jason Lee|Justin Long|Bella Thorne|Matthew Gra...   \n",
       "100  Kristen Bell|Idina Menzel|Jonathan Groff|Josh ...   \n",
       "101  Tom Hiddleston|Sienna Miller|Jeremy Irons|Luke...   \n",
       "\n",
       "                                              homepage  \\\n",
       "30                        http://www.mrholmesfilm.com/   \n",
       "36                                                 NaN   \n",
       "72                                                 NaN   \n",
       "74           http://www.mythicamovie.com/#!blank/wufvh   \n",
       "75   http://www.foxsearchlight.com/meandearlandthed...   \n",
       "88                        http://equals-the-movie.com/   \n",
       "92           http://www.mythicamovie.com/#!blank/y9ake   \n",
       "95   http://www.foxmovies.com/movies/alvin-and-the-...   \n",
       "100                                                NaN   \n",
       "101                                                NaN   \n",
       "\n",
       "                    director  \\\n",
       "30               Bill Condon   \n",
       "36             Afonso Poyart   \n",
       "72   Jean-Baptiste LÃ©onetti   \n",
       "74             Anne K. Black   \n",
       "75       Alfonso Gomez-Rejon   \n",
       "88             Drake Doremus   \n",
       "92             A. Todd Smith   \n",
       "95               Walt Becker   \n",
       "100  Chris Buck|Jennifer Lee   \n",
       "101             Ben Wheatley   \n",
       "\n",
       "                                               tagline      ...       \\\n",
       "30                             The man behind the myth      ...        \n",
       "36   A serial killer who can see your future, a psy...      ...        \n",
       "72                                                 NaN      ...        \n",
       "74                                                 NaN      ...        \n",
       "75            A Little Friendship Never Killed Anyone.      ...        \n",
       "88                                    Find your equal.      ...        \n",
       "92                                                 NaN      ...        \n",
       "95                                    Fast & furry-ous      ...        \n",
       "100                                                NaN      ...        \n",
       "101                        Leave the real world behind      ...        \n",
       "\n",
       "                                              overview runtime  \\\n",
       "30   The story is set in 1947, following a long-ret...     103   \n",
       "36   A psychic doctor, John Clancy, works with an F...     101   \n",
       "72   A high-rolling corporate shark and his impover...      95   \n",
       "74   When Teelaâ€™s sister is murdered and a powerf...     108   \n",
       "75   Greg is coasting through senior year of high s...     105   \n",
       "88   A futuristic love story set in a world where e...     101   \n",
       "92   Mallister takes Thane prisoner and forces Mare...       0   \n",
       "95   Through a series of misunderstandings, Alvin, ...      92   \n",
       "100  On Anna's birthday, Elsa and Kristoff are dete...       8   \n",
       "101  Dr. Robert Laing is the newest resident of a l...     119   \n",
       "\n",
       "                                genres  \\\n",
       "30                       Mystery|Drama   \n",
       "36                 Crime|Drama|Mystery   \n",
       "72                            Thriller   \n",
       "74            Action|Adventure|Fantasy   \n",
       "75                        Comedy|Drama   \n",
       "88       Drama|Romance|Science Fiction   \n",
       "92            Fantasy|Action|Adventure   \n",
       "95   Adventure|Animation|Comedy|Family   \n",
       "100         Adventure|Animation|Family   \n",
       "101       Action|Drama|Science Fiction   \n",
       "\n",
       "                                  production_companies release_date  \\\n",
       "30   BBC Films|See-Saw Films|FilmNation Entertainme...      6/19/15   \n",
       "36   Eden Rock Media|FilmNation Entertainment|Flynn...       9/3/15   \n",
       "72                                       Furthur Films      4/17/15   \n",
       "74                            Arrowstorm Entertainment      6/24/15   \n",
       "75                                   Indian Paintbrush      6/12/15   \n",
       "88   Scott Free Productions|Infinite Frameworks Stu...       9/4/15   \n",
       "92   Arrowstorm Entertainment|Camera 40 Productions...     12/19/15   \n",
       "95   Regency Enterprises|Fox 2000 Pictures|Sunswept...     12/17/15   \n",
       "100  Walt Disney Pictures|Walt Disney Animation Stu...       3/9/15   \n",
       "101  Ingenious Media|HanWay Films|Scope Pictures|Re...      9/26/15   \n",
       "\n",
       "    vote_count  vote_average  release_year  budget_adj   revenue_adj  \n",
       "30         425           6.4          2015         0.0  2.700677e+07  \n",
       "36         474           6.2          2015         0.0  2.056620e+07  \n",
       "72          81           5.5          2015         0.0  4.222338e+04  \n",
       "74          27           5.1          2015         0.0  0.000000e+00  \n",
       "75         569           7.7          2015         0.0  0.000000e+00  \n",
       "88         135           5.6          2015         0.0  1.839999e+06  \n",
       "92          11           5.4          2015         0.0  0.000000e+00  \n",
       "95         278           5.7          2015         0.0  2.150550e+08  \n",
       "100        475           7.0          2015         0.0  0.000000e+00  \n",
       "101        161           5.4          2015         0.0  0.000000e+00  \n",
       "\n",
       "[10 rows x 21 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#check for budget, NULL data like in the print (movie_table.iloc [255])above, filter on zero data\n",
    "df_budget_zero = df.query('budget == 0')\n",
    "\n",
    "# choice the first randomly\n",
    "df_budget_zero.head(10)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "budget\n",
       "0    5574\n",
       "1       4\n",
       "Name: imdb_id, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#count zero values in budget data using groupby\n",
    "df_budget_0count = df.groupby ('budget').count ()['imdb_id']\n",
    "df_budget_0count.head (2)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "5687 lines with no budget that is a huge amount "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='eda'></a>\n",
    "## Exploratory Data Analysis\n",
    "\n",
    "> **Tip**: Now that you've trimmed and cleaned your data, you're ready to move on to exploration. Compute statistics and create visualizations with the goal of addressing the research questions that you posed in the Introduction section. It is recommended that you be systematic with your approach. Look at one variable at a time, and then follow it up by looking at relationships between variables.\n",
    "\n",
    "### Research Question 1 Which genres are mostly liked and how developed the curve over the years, is any trend visible? "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I want to know first about the Genres as the entries are mulitple in one column. Therefore I split the column. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# genres split to get single lines per genre to count it \n",
    "def split_genre (genres):\n",
    "    split_genre = genres.split (\"|\")\n",
    "    return split_genre\n",
    "\n",
    "genres_single = dict()\n",
    "for id, row in df.iterrows():\n",
    "    for genre in split_genre(row['genres']):\n",
    "        if genre not in genres_single.keys():\n",
    "            genres_single[genre] = [row['original_title']]\n",
    "        else:\n",
    "            genres_single[genre].append(row['original_title'])\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32.23317999999998"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#movie and genere - identify popularity \n",
    "genre_year_popularity = dict() \n",
    "for index, row in df.iterrows():\n",
    "    genre_list = split_genre(row['genres'])\n",
    "    for genre in genre_list:\n",
    "        if genre not in genre_year_popularity.keys():\n",
    "            genre_year_popularity[genre] = {}\n",
    "        \n",
    "        year = str(row['release_year']) #key als string -> auch als long int möglich\n",
    "        if year not in genre_year_popularity[genre].keys():\n",
    "            genre_year_popularity[genre][year] = row['popularity']\n",
    "        else:\n",
    "            genre_year_popularity[genre][year] += row['popularity']\n",
    "            \n",
    "genre_year_popularity['Action']['2000']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#define a function that counts the number of times each genre appears:\n",
    "def count_word(df, ref_col):\n",
    "    keyword_count = dict()\n",
    "\n",
    "    for liste_keywords in df[ref_col].str.split('|'):\n",
    "        if type(liste_keywords) == float and pd.isnull(liste_keywords): continue\n",
    "        for s in liste_keywords: \n",
    "            if pd.notnull(s): \n",
    "                if s in keyword_count.keys():\n",
    "                    keyword_count[s] += 1\n",
    "                else:\n",
    "                    keyword_count[s] = 1\n",
    "                \n",
    "    # convert the dictionary in a list to sort the keywords  by frequency\n",
    "    keyword_occurences = []\n",
    "    for k,v in keyword_count.items():\n",
    "        keyword_occurences.append([k,v])\n",
    "    keyword_occurences.sort(key = lambda x:x[1], reverse = True)\n",
    "    return keyword_occurences, keyword_count\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[['Drama', 4746],\n",
       " ['Comedy', 3775],\n",
       " ['Thriller', 2902],\n",
       " ['Action', 2376],\n",
       " ['Romance', 1708],\n",
       " ['Horror', 1636],\n",
       " ['Adventure', 1465],\n",
       " ['Crime', 1353],\n",
       " ['Science Fiction', 1221],\n",
       " ['Family', 1214],\n",
       " ['Fantasy', 908],\n",
       " ['Mystery', 808],\n",
       " ['Animation', 664],\n",
       " ['Documentary', 470],\n",
       " ['Music', 399],\n",
       " ['History', 330],\n",
       " ['War', 268],\n",
       " ['Foreign', 184],\n",
       " ['Western', 164],\n",
       " ['TV Movie', 162]]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#counting how many times each of genres occur:\n",
    "keyword_occurences, dum = count_word(df, 'genres')\n",
    "keyword_occurences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10e495c50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# splitting the result from above into two list to be able to plot the bar chart. \n",
    "occ = list (dum.values())\n",
    "genre = list (dum.keys())\n",
    "#sorting the list in decending order to identify top genres \n",
    "genre, occ = zip(*sorted(dum.items(), key=lambda x:x[1], reverse=True))\n",
    "#Plotting the bar chart \n",
    "plt.figure(figsize=(20,5))\n",
    "plt.bar(range(len(occ)), occ, align='center')\n",
    "plt.xlabel ('genre')\n",
    "plt.xticks(range(len(occ)), genre)\n",
    "plt.ylabel ('occurence')\n",
    "plt.title ('Genres by Occurence')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The most mentioned genres are Drama, Comedy, Thriller and Action.\n",
    "I will check on the popularity for Drama and Comedy on  the popularity for the years 2010 until 2015 as they are \n",
    "the most recent ones. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Action</th>\n",
       "      <th>Adventure</th>\n",
       "      <th>Animation</th>\n",
       "      <th>Comedy</th>\n",
       "      <th>Crime</th>\n",
       "      <th>Documentary</th>\n",
       "      <th>Drama</th>\n",
       "      <th>Family</th>\n",
       "      <th>Fantasy</th>\n",
       "      <th>Foreign</th>\n",
       "      <th>History</th>\n",
       "      <th>Horror</th>\n",
       "      <th>Music</th>\n",
       "      <th>Mystery</th>\n",
       "      <th>Romance</th>\n",
       "      <th>Science Fiction</th>\n",
       "      <th>TV Movie</th>\n",
       "      <th>Thriller</th>\n",
       "      <th>War</th>\n",
       "      <th>Western</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>99.913105</td>\n",
       "      <td>79.976961</td>\n",
       "      <td>34.226116</td>\n",
       "      <td>98.832629</td>\n",
       "      <td>34.493390</td>\n",
       "      <td>7.330377</td>\n",
       "      <td>122.743677</td>\n",
       "      <td>53.062884</td>\n",
       "      <td>46.726062</td>\n",
       "      <td>2.570107</td>\n",
       "      <td>7.377032</td>\n",
       "      <td>32.753184</td>\n",
       "      <td>3.566920</td>\n",
       "      <td>35.506099</td>\n",
       "      <td>53.694305</td>\n",
       "      <td>37.223664</td>\n",
       "      <td>2.564497</td>\n",
       "      <td>99.189172</td>\n",
       "      <td>4.541660</td>\n",
       "      <td>4.347770</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>121.681073</td>\n",
       "      <td>69.960181</td>\n",
       "      <td>43.387946</td>\n",
       "      <td>115.051015</td>\n",
       "      <td>42.801786</td>\n",
       "      <td>8.722046</td>\n",
       "      <td>128.074568</td>\n",
       "      <td>54.976362</td>\n",
       "      <td>45.870870</td>\n",
       "      <td>1.747032</td>\n",
       "      <td>2.473334</td>\n",
       "      <td>40.690885</td>\n",
       "      <td>6.768360</td>\n",
       "      <td>32.673002</td>\n",
       "      <td>50.677041</td>\n",
       "      <td>54.259455</td>\n",
       "      <td>4.112818</td>\n",
       "      <td>116.041838</td>\n",
       "      <td>4.731528</td>\n",
       "      <td>3.527401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012</th>\n",
       "      <td>111.986677</td>\n",
       "      <td>73.073879</td>\n",
       "      <td>31.463643</td>\n",
       "      <td>103.971280</td>\n",
       "      <td>46.632713</td>\n",
       "      <td>7.399407</td>\n",
       "      <td>140.357797</td>\n",
       "      <td>30.836140</td>\n",
       "      <td>46.147053</td>\n",
       "      <td>0.597536</td>\n",
       "      <td>5.601248</td>\n",
       "      <td>45.168912</td>\n",
       "      <td>9.453821</td>\n",
       "      <td>16.357765</td>\n",
       "      <td>51.936521</td>\n",
       "      <td>50.663266</td>\n",
       "      <td>2.872503</td>\n",
       "      <td>108.295298</td>\n",
       "      <td>6.767092</td>\n",
       "      <td>6.931111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>121.755363</td>\n",
       "      <td>84.141905</td>\n",
       "      <td>36.320297</td>\n",
       "      <td>105.427791</td>\n",
       "      <td>65.017269</td>\n",
       "      <td>10.053128</td>\n",
       "      <td>166.999176</td>\n",
       "      <td>39.314443</td>\n",
       "      <td>39.531237</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11.042901</td>\n",
       "      <td>50.174675</td>\n",
       "      <td>10.809351</td>\n",
       "      <td>22.426785</td>\n",
       "      <td>39.702135</td>\n",
       "      <td>75.707183</td>\n",
       "      <td>2.511855</td>\n",
       "      <td>128.550095</td>\n",
       "      <td>3.770256</td>\n",
       "      <td>1.995766</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>216.979690</td>\n",
       "      <td>162.845275</td>\n",
       "      <td>40.311176</td>\n",
       "      <td>160.044179</td>\n",
       "      <td>57.459754</td>\n",
       "      <td>9.470027</td>\n",
       "      <td>246.362717</td>\n",
       "      <td>47.765725</td>\n",
       "      <td>65.856645</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16.144810</td>\n",
       "      <td>50.809329</td>\n",
       "      <td>18.123747</td>\n",
       "      <td>36.493987</td>\n",
       "      <td>52.714968</td>\n",
       "      <td>142.102950</td>\n",
       "      <td>3.583812</td>\n",
       "      <td>186.496837</td>\n",
       "      <td>33.927923</td>\n",
       "      <td>4.043682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>240.854165</td>\n",
       "      <td>226.581261</td>\n",
       "      <td>44.235481</td>\n",
       "      <td>151.813813</td>\n",
       "      <td>87.823617</td>\n",
       "      <td>10.027688</td>\n",
       "      <td>243.848091</td>\n",
       "      <td>60.237690</td>\n",
       "      <td>57.427532</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15.118574</td>\n",
       "      <td>59.583763</td>\n",
       "      <td>20.958333</td>\n",
       "      <td>51.023584</td>\n",
       "      <td>53.984389</td>\n",
       "      <td>192.966558</td>\n",
       "      <td>5.211474</td>\n",
       "      <td>239.720907</td>\n",
       "      <td>11.560600</td>\n",
       "      <td>19.072777</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Action   Adventure  Animation      Comedy      Crime  Documentary  \\\n",
       "2010   99.913105   79.976961  34.226116   98.832629  34.493390     7.330377   \n",
       "2011  121.681073   69.960181  43.387946  115.051015  42.801786     8.722046   \n",
       "2012  111.986677   73.073879  31.463643  103.971280  46.632713     7.399407   \n",
       "2013  121.755363   84.141905  36.320297  105.427791  65.017269    10.053128   \n",
       "2014  216.979690  162.845275  40.311176  160.044179  57.459754     9.470027   \n",
       "2015  240.854165  226.581261  44.235481  151.813813  87.823617    10.027688   \n",
       "\n",
       "           Drama     Family    Fantasy   Foreign    History     Horror  \\\n",
       "2010  122.743677  53.062884  46.726062  2.570107   7.377032  32.753184   \n",
       "2011  128.074568  54.976362  45.870870  1.747032   2.473334  40.690885   \n",
       "2012  140.357797  30.836140  46.147053  0.597536   5.601248  45.168912   \n",
       "2013  166.999176  39.314443  39.531237       NaN  11.042901  50.174675   \n",
       "2014  246.362717  47.765725  65.856645       NaN  16.144810  50.809329   \n",
       "2015  243.848091  60.237690  57.427532       NaN  15.118574  59.583763   \n",
       "\n",
       "          Music    Mystery    Romance  Science Fiction  TV Movie    Thriller  \\\n",
       "2010   3.566920  35.506099  53.694305        37.223664  2.564497   99.189172   \n",
       "2011   6.768360  32.673002  50.677041        54.259455  4.112818  116.041838   \n",
       "2012   9.453821  16.357765  51.936521        50.663266  2.872503  108.295298   \n",
       "2013  10.809351  22.426785  39.702135        75.707183  2.511855  128.550095   \n",
       "2014  18.123747  36.493987  52.714968       142.102950  3.583812  186.496837   \n",
       "2015  20.958333  51.023584  53.984389       192.966558  5.211474  239.720907   \n",
       "\n",
       "            War    Western  \n",
       "2010   4.541660   4.347770  \n",
       "2011   4.731528   3.527401  \n",
       "2012   6.767092   6.931111  \n",
       "2013   3.770256   1.995766  \n",
       "2014  33.927923   4.043682  \n",
       "2015  11.560600  19.072777  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#applying a filter on the recents years \n",
    "gyp =pd.DataFrame(genre_year_popularity)\n",
    "gyp_new = gyp[gyp.index >= '2010']\n",
    "gyp_new"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The developement of Drama, Comedy and Action have a peak in their curve in 2014, whereas the thriller curve is constantly increasing since 2012. Interesting is also that there is down for all curves in 2013. I could be a good idea to make a comparison how many films were released per year as I suspect it could be related to the amount of movies released.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Action</th>\n",
       "      <th>Adventure</th>\n",
       "      <th>Animation</th>\n",
       "      <th>Comedy</th>\n",
       "      <th>Crime</th>\n",
       "      <th>Documentary</th>\n",
       "      <th>Drama</th>\n",
       "      <th>Family</th>\n",
       "      <th>Fantasy</th>\n",
       "      <th>Foreign</th>\n",
       "      <th>History</th>\n",
       "      <th>Horror</th>\n",
       "      <th>Music</th>\n",
       "      <th>Mystery</th>\n",
       "      <th>Romance</th>\n",
       "      <th>Science Fiction</th>\n",
       "      <th>TV Movie</th>\n",
       "      <th>Thriller</th>\n",
       "      <th>War</th>\n",
       "      <th>Western</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>4260233</td>\n",
       "      <td>2168677</td>\n",
       "      <td>2579013.0</td>\n",
       "      <td>7328209</td>\n",
       "      <td>2114375</td>\n",
       "      <td>1551006.0</td>\n",
       "      <td>9734936</td>\n",
       "      <td>2158729</td>\n",
       "      <td>1689815.0</td>\n",
       "      <td>601878.0</td>\n",
       "      <td>1288738.0</td>\n",
       "      <td>3714158</td>\n",
       "      <td>465879.0</td>\n",
       "      <td>1196217.0</td>\n",
       "      <td>4033740</td>\n",
       "      <td>2208423</td>\n",
       "      <td>309230.0</td>\n",
       "      <td>5768762.0</td>\n",
       "      <td>435752.0</td>\n",
       "      <td>256002.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>7543205</td>\n",
       "      <td>3871256</td>\n",
       "      <td>3368255.0</td>\n",
       "      <td>11307944</td>\n",
       "      <td>3414952</td>\n",
       "      <td>3346778.0</td>\n",
       "      <td>14301932</td>\n",
       "      <td>5100800</td>\n",
       "      <td>3043956.0</td>\n",
       "      <td>927611.0</td>\n",
       "      <td>603677.0</td>\n",
       "      <td>6126650</td>\n",
       "      <td>1148057.0</td>\n",
       "      <td>2431540.0</td>\n",
       "      <td>4841461</td>\n",
       "      <td>3373275</td>\n",
       "      <td>796452.0</td>\n",
       "      <td>9510767.0</td>\n",
       "      <td>597544.0</td>\n",
       "      <td>163563.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012</th>\n",
       "      <td>9133271</td>\n",
       "      <td>4437478</td>\n",
       "      <td>3980888.0</td>\n",
       "      <td>17514950</td>\n",
       "      <td>5163723</td>\n",
       "      <td>4745072.0</td>\n",
       "      <td>23892070</td>\n",
       "      <td>4503918</td>\n",
       "      <td>2855587.0</td>\n",
       "      <td>677179.0</td>\n",
       "      <td>1281939.0</td>\n",
       "      <td>11239310</td>\n",
       "      <td>2416321.0</td>\n",
       "      <td>3658642.0</td>\n",
       "      <td>8079527</td>\n",
       "      <td>5330181</td>\n",
       "      <td>1654865.0</td>\n",
       "      <td>15827881.0</td>\n",
       "      <td>937982.0</td>\n",
       "      <td>304951.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>17711454</td>\n",
       "      <td>9421382</td>\n",
       "      <td>7076670.0</td>\n",
       "      <td>29128487</td>\n",
       "      <td>10439505</td>\n",
       "      <td>10545664.0</td>\n",
       "      <td>42247651</td>\n",
       "      <td>7713810</td>\n",
       "      <td>5400068.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2309114.0</td>\n",
       "      <td>18032312</td>\n",
       "      <td>5328925.0</td>\n",
       "      <td>7073054.0</td>\n",
       "      <td>11121367</td>\n",
       "      <td>9521523</td>\n",
       "      <td>1700505.0</td>\n",
       "      <td>28550086.0</td>\n",
       "      <td>1243480.0</td>\n",
       "      <td>368865.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>29490702</td>\n",
       "      <td>14494601</td>\n",
       "      <td>8271760.0</td>\n",
       "      <td>43901589</td>\n",
       "      <td>15146151</td>\n",
       "      <td>15442444.0</td>\n",
       "      <td>68335920</td>\n",
       "      <td>10361302</td>\n",
       "      <td>7887249.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3645902.0</td>\n",
       "      <td>26217703</td>\n",
       "      <td>6934036.0</td>\n",
       "      <td>8617701.0</td>\n",
       "      <td>21040470</td>\n",
       "      <td>13895912</td>\n",
       "      <td>3373233.0</td>\n",
       "      <td>42135756.0</td>\n",
       "      <td>5230283.0</td>\n",
       "      <td>1490969.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>29861861</td>\n",
       "      <td>17996370</td>\n",
       "      <td>11086192.0</td>\n",
       "      <td>46873364</td>\n",
       "      <td>14792585</td>\n",
       "      <td>16468585.0</td>\n",
       "      <td>76471197</td>\n",
       "      <td>12892937</td>\n",
       "      <td>9120955.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4426714.0</td>\n",
       "      <td>37664745</td>\n",
       "      <td>9810723.0</td>\n",
       "      <td>12361830.0</td>\n",
       "      <td>16123119</td>\n",
       "      <td>22886429</td>\n",
       "      <td>6900792.0</td>\n",
       "      <td>49690151.0</td>\n",
       "      <td>2516459.0</td>\n",
       "      <td>1775732.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Action  Adventure   Animation    Comedy     Crime  Documentary  \\\n",
       "2010   4260233    2168677   2579013.0   7328209   2114375    1551006.0   \n",
       "2011   7543205    3871256   3368255.0  11307944   3414952    3346778.0   \n",
       "2012   9133271    4437478   3980888.0  17514950   5163723    4745072.0   \n",
       "2013  17711454    9421382   7076670.0  29128487  10439505   10545664.0   \n",
       "2014  29490702   14494601   8271760.0  43901589  15146151   15442444.0   \n",
       "2015  29861861   17996370  11086192.0  46873364  14792585   16468585.0   \n",
       "\n",
       "         Drama    Family    Fantasy   Foreign    History    Horror      Music  \\\n",
       "2010   9734936   2158729  1689815.0  601878.0  1288738.0   3714158   465879.0   \n",
       "2011  14301932   5100800  3043956.0  927611.0   603677.0   6126650  1148057.0   \n",
       "2012  23892070   4503918  2855587.0  677179.0  1281939.0  11239310  2416321.0   \n",
       "2013  42247651   7713810  5400068.0       NaN  2309114.0  18032312  5328925.0   \n",
       "2014  68335920  10361302  7887249.0       NaN  3645902.0  26217703  6934036.0   \n",
       "2015  76471197  12892937  9120955.0       NaN  4426714.0  37664745  9810723.0   \n",
       "\n",
       "         Mystery   Romance  Science Fiction   TV Movie    Thriller        War  \\\n",
       "2010   1196217.0   4033740          2208423   309230.0   5768762.0   435752.0   \n",
       "2011   2431540.0   4841461          3373275   796452.0   9510767.0   597544.0   \n",
       "2012   3658642.0   8079527          5330181  1654865.0  15827881.0   937982.0   \n",
       "2013   7073054.0  11121367          9521523  1700505.0  28550086.0  1243480.0   \n",
       "2014   8617701.0  21040470         13895912  3373233.0  42135756.0  5230283.0   \n",
       "2015  12361830.0  16123119         22886429  6900792.0  49690151.0  2516459.0   \n",
       "\n",
       "        Western  \n",
       "2010   256002.0  \n",
       "2011   163563.0  \n",
       "2012   304951.0  \n",
       "2013   368865.0  \n",
       "2014  1490969.0  \n",
       "2015  1775732.0  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#movie and genere - identify release year\n",
    "genre_releaseyear = dict() \n",
    "for index, row in df.iterrows():\n",
    "    genre_list = split_genre(row['genres'])\n",
    "    for genre in genre_list:\n",
    "        if genre not in genre_releaseyear.keys():\n",
    "            genre_releaseyear[genre] = {}\n",
    "        \n",
    "        year = str(row['release_year']) \n",
    "        if year not in genre_releaseyear[genre].keys():\n",
    "            genre_releaseyear[genre][year] = row['id']\n",
    "        else:\n",
    "            genre_releaseyear[genre][year] += row['id']\n",
    "            \n",
    "gry= pd.DataFrame (genre_releaseyear)\n",
    "\n",
    "gry_new= gry[gry.index >= '2010']\n",
    "gry_new\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "           Drama      Comedy    Thriller      Action\n",
      "2010  122.743677   98.832629   99.189172   99.913105\n",
      "2011  128.074568  115.051015  116.041838  121.681073\n",
      "2012  140.357797  103.971280  108.295298  111.986677\n",
      "2013  166.999176  105.427791  128.550095  121.755363\n",
      "2014  246.362717  160.044179  186.496837  216.979690\n",
      "2015  243.848091  151.813813  239.720907  240.854165\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a3427b630>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#reducing to the top 4 genres \n",
    "result = gyp_new [['Drama', 'Comedy', 'Thriller', 'Action']]\n",
    "print (result)\n",
    "#prepare and display the graph \n",
    "result.plot ()\n",
    "plt.xticks([6])\n",
    "plt.yticks([6])\n",
    "plt.xlabel ('year')\n",
    "plt.ylabel ('popularity')\n",
    "plt.title ('popularity over the years by genre')\n",
    "plt.show ()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "         Drama    Comedy    Thriller    Action\n",
      "2010   9734936   7328209   5768762.0   4260233\n",
      "2011  14301932  11307944   9510767.0   7543205\n",
      "2012  23892070  17514950  15827881.0   9133271\n",
      "2013  42247651  29128487  28550086.0  17711454\n",
      "2014  68335920  43901589  42135756.0  29490702\n",
      "2015  76471197  46873364  49690151.0  29861861\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a341767f0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#reducing to the top 4 genres \n",
    "result2 = gry_new [['Drama', 'Comedy', 'Thriller', 'Action']]\n",
    "print (result2)\n",
    "#prepare and display the graph \n",
    "result2.plot ()\n",
    "plt.xlabel ('year')\n",
    "plt.xticks([6])\n",
    "plt.yticks([6])\n",
    "#plt.xticks ('2010', '2011', '2012', '2013', '2014', '2015')\n",
    "plt.ylabel ('release')\n",
    "plt.title ('release over the years by genre')\n",
    "plt.show ()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualisation of both variables reduced to genre Drama"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "#preparing the data for visualisation \n",
    "pop=result['Drama'] \n",
    "rel= result2 ['Drama']\n",
    "df_new = pd.DataFrame({\"date\": [\"2010\", \"2011\", \"2012\", \"2013\", \"2014\",\"2015\"],\n",
    "                   \"popularity\": [122.743677,  128.074568, 140.357797, 166.999176, 246.362717,243.848091], \n",
    "                   \"release\": ([float(9734936.0),  float(14301932.0), float(23892070.0), float(42247651.0), float(68335920.0), float(76471197.0)])})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010</td>\n",
       "      <td>122.743677</td>\n",
       "      <td>9734936.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011</td>\n",
       "      <td>128.074568</td>\n",
       "      <td>14301932.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012</td>\n",
       "      <td>140.357797</td>\n",
       "      <td>23892070.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013</td>\n",
       "      <td>166.999176</td>\n",
       "      <td>42247651.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2014</td>\n",
       "      <td>246.362717</td>\n",
       "      <td>68335920.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2015</td>\n",
       "      <td>243.848091</td>\n",
       "      <td>76471197.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   date  popularity     release\n",
       "0  2010  122.743677   9734936.0\n",
       "1  2011  128.074568  14301932.0\n",
       "2  2012  140.357797  23892070.0\n",
       "3  2013  166.999176  42247651.0\n",
       "4  2014  246.362717  68335920.0\n",
       "5  2015  243.848091  76471197.0"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#show the reduced data\n",
    "df_new\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Popularity for Drama over the years')"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ea84e80>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualization popularity for 2010 - 2015\n",
    "plt.figure(figsize=(10,5))\n",
    "sns.barplot(x=df_new['date'], y=df_new['popularity'])\n",
    "plt.xticks(rotation= 45)\n",
    "plt.xlabel('year')\n",
    "plt.ylabel('popularity')\n",
    "plt.title('Popularity for Drama over the years')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'release for Drama over the years')"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ea84c18>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualization releases in 2010 - 2015\n",
    "plt.figure(figsize=(10,5))\n",
    "sns.barplot(x=df_new['date'], y=df_new['release'])\n",
    "plt.xticks(rotation= 45)\n",
    "plt.xlabel('year')\n",
    "plt.ylabel('release')\n",
    "plt.title('release for Drama over the years')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "the two bar charts are ok, but I want to find out what happens if I put the two results into one chart. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5,1,'Comparison of Release and Popularity')"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ec4e0f0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#visualisation for popularity and release in one single graph\n",
    "x = df_new ['date']\n",
    "y1 = df_new ['popularity'];\n",
    "y2 = df_new ['release'];\n",
    "#shaping and visualisation - the challenge was to define the y axis as they have very differing scale\n",
    "fig = plt.figure()\n",
    "ax1 = fig.add_subplot(111)\n",
    "ax1.plot(x, y1)\n",
    "ax1.set_ylabel('y1')\n",
    "plt.xlabel(\"Year\")\n",
    "ax2 = ax1.twinx()\n",
    "ax2.plot(x, y2, 'r-')\n",
    "ax2.set_ylabel('y2', color='r')\n",
    "for tl in ax2.get_yticklabels():\n",
    "    tl.set_color('r')\n",
    "plt.title(\"Comparison of Release and Popularity\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The graph for release shows a continious increase for Drama over the last years, whereas popularity is increasing until 2015 and having a decrease in 2015. So it is not a perfect conclusion that the two variables to be corelated. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Financial Investigation \n",
    "checking on budget, revenue vote_count and popularity \n",
    "In this area I decided only to take into account the movies which have entries in the budget column and the revenue column.  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>original_title</th>\n",
       "      <th>popularity</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>cast</th>\n",
       "      <th>director</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>5562</td>\n",
       "      <td>Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...</td>\n",
       "      <td>Colin Trevorrow</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>6185</td>\n",
       "      <td>Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...</td>\n",
       "      <td>George Miller</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>110000000</td>\n",
       "      <td>295238201</td>\n",
       "      <td>Insurgent</td>\n",
       "      <td>13.112507</td>\n",
       "      <td>2480</td>\n",
       "      <td>Shailene Woodley|Theo James|Kate Winslet|Ansel...</td>\n",
       "      <td>Robert Schwentke</td>\n",
       "      <td>Adventure|Science Fiction|Thriller</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200000000</td>\n",
       "      <td>2068178225</td>\n",
       "      <td>Star Wars: The Force Awakens</td>\n",
       "      <td>11.173104</td>\n",
       "      <td>5292</td>\n",
       "      <td>Harrison Ford|Mark Hamill|Carrie Fisher|Adam D...</td>\n",
       "      <td>J.J. Abrams</td>\n",
       "      <td>Action|Adventure|Science Fiction|Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>190000000</td>\n",
       "      <td>1506249360</td>\n",
       "      <td>Furious 7</td>\n",
       "      <td>9.335014</td>\n",
       "      <td>2947</td>\n",
       "      <td>Vin Diesel|Paul Walker|Jason Statham|Michelle ...</td>\n",
       "      <td>James Wan</td>\n",
       "      <td>Action|Crime|Thriller</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      budget     revenue                original_title  popularity  \\\n",
       "0  150000000  1513528810                Jurassic World   32.985763   \n",
       "1  150000000   378436354            Mad Max: Fury Road   28.419936   \n",
       "2  110000000   295238201                     Insurgent   13.112507   \n",
       "3  200000000  2068178225  Star Wars: The Force Awakens   11.173104   \n",
       "4  190000000  1506249360                     Furious 7    9.335014   \n",
       "\n",
       "   vote_count                                               cast  \\\n",
       "0        5562  Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...   \n",
       "1        6185  Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...   \n",
       "2        2480  Shailene Woodley|Theo James|Kate Winslet|Ansel...   \n",
       "3        5292  Harrison Ford|Mark Hamill|Carrie Fisher|Adam D...   \n",
       "4        2947  Vin Diesel|Paul Walker|Jason Statham|Michelle ...   \n",
       "\n",
       "           director                                     genres  \n",
       "0   Colin Trevorrow  Action|Adventure|Science Fiction|Thriller  \n",
       "1     George Miller  Action|Adventure|Science Fiction|Thriller  \n",
       "2  Robert Schwentke         Adventure|Science Fiction|Thriller  \n",
       "3       J.J. Abrams   Action|Adventure|Science Fiction|Fantasy  \n",
       "4         James Wan                      Action|Crime|Thriller  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dropping the rows where no budget is defined\n",
    "only_movies_with_budget = df[df['budget'] != 0]\n",
    "omwb=pd.DataFrame(only_movies_with_budget)\n",
    "#dropping columns\n",
    "movie_bud_rev_pop= omwb [['budget', 'revenue','original_title','popularity', 'vote_count', 'cast', 'director', 'genres']]\n",
    "#dropping rows without revenue\n",
    "treated = movie_bud_rev_pop[movie_bud_rev_pop['revenue'] != 0]\n",
    "# check if it works out \n",
    "treated.head ()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "budget              int64\n",
       "revenue             int64\n",
       "original_title     object\n",
       "popularity        float64\n",
       "vote_count          int64\n",
       "cast               object\n",
       "director           object\n",
       "genres             object\n",
       "dtype: object"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# investigation data type\n",
    "treated.dtypes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             budget       revenue   popularity   vote_count\n",
      "count  3.849000e+03  3.849000e+03  3849.000000  3849.000000\n",
      "mean   3.724886e+07  1.078148e+08     1.192933   528.387114\n",
      "std    4.221699e+07  1.766175e+08     1.475622   880.333629\n",
      "min    1.000000e+00  2.000000e+00     0.001117    10.000000\n",
      "25%    1.000000e+07  1.367069e+07     0.463337    71.000000\n",
      "50%    2.400000e+07  4.490726e+07     0.798582   205.000000\n",
      "75%    5.000000e+07  1.243052e+08     1.374300   581.000000\n",
      "max    4.250000e+08  2.781506e+09    32.985763  9767.000000\n"
     ]
    }
   ],
   "source": [
    "#looking at some standard description\n",
    "print(treated.describe())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>profit_earned</th>\n",
       "      <th>original_title</th>\n",
       "      <th>popularity</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>cast</th>\n",
       "      <th>director</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>1363528810</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>5562</td>\n",
       "      <td>Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...</td>\n",
       "      <td>Colin Trevorrow</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>228436354</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>6185</td>\n",
       "      <td>Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...</td>\n",
       "      <td>George Miller</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      budget     revenue  profit_earned      original_title  popularity  \\\n",
       "0  150000000  1513528810     1363528810      Jurassic World   32.985763   \n",
       "1  150000000   378436354      228436354  Mad Max: Fury Road   28.419936   \n",
       "\n",
       "   vote_count                                               cast  \\\n",
       "0        5562  Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...   \n",
       "1        6185  Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...   \n",
       "\n",
       "          director                                     genres  \n",
       "0  Colin Trevorrow  Action|Adventure|Science Fiction|Thriller  \n",
       "1    George Miller  Action|Adventure|Science Fiction|Thriller  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#insert function with three parameters(index of the column in the dataset, name of the column, value to be inserted)\n",
    "treated.insert(2,'profit_earned',treated['revenue']-treated['budget'])\n",
    "\n",
    "#previewing the changes in the dataset\n",
    "treated.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1386</th>\n",
       "      <th>2244</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>budget</th>\n",
       "      <td>237000000</td>\n",
       "      <td>425000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>revenue</th>\n",
       "      <td>2781505847</td>\n",
       "      <td>11087569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>profit_earned</th>\n",
       "      <td>2544505847</td>\n",
       "      <td>-413912431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>original_title</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>The Warrior's Way</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>popularity</th>\n",
       "      <td>9.43277</td>\n",
       "      <td>0.25054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vote_count</th>\n",
       "      <td>8458</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cast</th>\n",
       "      <td>Sam Worthington|Zoe Saldana|Sigourney Weaver|S...</td>\n",
       "      <td>Kate Bosworth|Jang Dong-gun|Geoffrey Rush|Dann...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>director</th>\n",
       "      <td>James Cameron</td>\n",
       "      <td>Sngmoo Lee</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>genres</th>\n",
       "      <td>Action|Adventure|Fantasy|Science Fiction</td>\n",
       "      <td>Adventure|Fantasy|Action|Western|Thriller</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                             1386  \\\n",
       "budget                                                  237000000   \n",
       "revenue                                                2781505847   \n",
       "profit_earned                                          2544505847   \n",
       "original_title                                             Avatar   \n",
       "popularity                                                9.43277   \n",
       "vote_count                                                   8458   \n",
       "cast            Sam Worthington|Zoe Saldana|Sigourney Weaver|S...   \n",
       "director                                            James Cameron   \n",
       "genres                   Action|Adventure|Fantasy|Science Fiction   \n",
       "\n",
       "                                                             2244  \n",
       "budget                                                  425000000  \n",
       "revenue                                                  11087569  \n",
       "profit_earned                                          -413912431  \n",
       "original_title                                  The Warrior's Way  \n",
       "popularity                                                0.25054  \n",
       "vote_count                                                     74  \n",
       "cast            Kate Bosworth|Jang Dong-gun|Geoffrey Rush|Dann...  \n",
       "director                                               Sngmoo Lee  \n",
       "genres                  Adventure|Fantasy|Action|Western|Thriller  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pprint\n",
    "#defining the function\n",
    "def calculate(column):\n",
    "    #for highest earned profit\n",
    "    high= treated[column].idxmax()\n",
    "    high_details=pd.DataFrame(treated.loc[high])\n",
    "    \n",
    "    #for lowest earned profit\n",
    "    low= treated[column].idxmin()\n",
    "    low_details=pd.DataFrame(treated.loc[low])\n",
    "    \n",
    "    #collecting the  data in one place\n",
    "    info=pd.concat([high_details, low_details], axis=1)\n",
    "    \n",
    "    return info\n",
    "\n",
    "#calling the function\n",
    "calculate('profit_earned')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The movie with the highest profit is Avatar in column 1386 whereas The Warrior's Way in column 2244 is the movie with a negative profit. There is as well a significant gap between the vote_counts and the popularity. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2244</th>\n",
       "      <th>2618</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>budget</th>\n",
       "      <td>425000000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>revenue</th>\n",
       "      <td>11087569</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>profit_earned</th>\n",
       "      <td>-413912431</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>original_title</th>\n",
       "      <td>The Warrior's Way</td>\n",
       "      <td>Lost &amp; Found</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>popularity</th>\n",
       "      <td>0.25054</td>\n",
       "      <td>0.090186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vote_count</th>\n",
       "      <td>74</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cast</th>\n",
       "      <td>Kate Bosworth|Jang Dong-gun|Geoffrey Rush|Dann...</td>\n",
       "      <td>David Spade|Sophie Marceau|Ever Carradine|Step...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>director</th>\n",
       "      <td>Sngmoo Lee</td>\n",
       "      <td>Jeff Pollack</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>genres</th>\n",
       "      <td>Adventure|Fantasy|Action|Western|Thriller</td>\n",
       "      <td>Comedy|Romance</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                             2244  \\\n",
       "budget                                                  425000000   \n",
       "revenue                                                  11087569   \n",
       "profit_earned                                          -413912431   \n",
       "original_title                                  The Warrior's Way   \n",
       "popularity                                                0.25054   \n",
       "vote_count                                                     74   \n",
       "cast            Kate Bosworth|Jang Dong-gun|Geoffrey Rush|Dann...   \n",
       "director                                               Sngmoo Lee   \n",
       "genres                  Adventure|Fantasy|Action|Western|Thriller   \n",
       "\n",
       "                                                             2618  \n",
       "budget                                                          1  \n",
       "revenue                                                       100  \n",
       "profit_earned                                                  99  \n",
       "original_title                                       Lost & Found  \n",
       "popularity                                               0.090186  \n",
       "vote_count                                                     14  \n",
       "cast            David Spade|Sophie Marceau|Ever Carradine|Step...  \n",
       "director                                             Jeff Pollack  \n",
       "genres                                             Comedy|Romance  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#calling the function calculate to check on the budget column \n",
    "calculate('budget')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this case we see that the movie The Warrior's Way has the highest budget and Lost and Found has got the lowest budget- we still need to take into account that those entries are done by humans. So we cannot be sure to have always the correct entries. Budget of one Dollar is not realistic in my point of view. And on top there is no hint the entries are all in Dollars. As well, we see here there is a gap in the vote count, even it is not significant. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1386</th>\n",
       "      <th>5067</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>budget</th>\n",
       "      <td>237000000</td>\n",
       "      <td>6000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>revenue</th>\n",
       "      <td>2781505847</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>profit_earned</th>\n",
       "      <td>2544505847</td>\n",
       "      <td>-5999998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>original_title</th>\n",
       "      <td>Avatar</td>\n",
       "      <td>Shattered Glass</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>popularity</th>\n",
       "      <td>9.43277</td>\n",
       "      <td>0.462609</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vote_count</th>\n",
       "      <td>8458</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cast</th>\n",
       "      <td>Sam Worthington|Zoe Saldana|Sigourney Weaver|S...</td>\n",
       "      <td>Hayden Christensen|Peter Sarsgaard|ChloÃ« Sevi...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>director</th>\n",
       "      <td>James Cameron</td>\n",
       "      <td>Billy Ray</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>genres</th>\n",
       "      <td>Action|Adventure|Fantasy|Science Fiction</td>\n",
       "      <td>Drama|History</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                             1386  \\\n",
       "budget                                                  237000000   \n",
       "revenue                                                2781505847   \n",
       "profit_earned                                          2544505847   \n",
       "original_title                                             Avatar   \n",
       "popularity                                                9.43277   \n",
       "vote_count                                                   8458   \n",
       "cast            Sam Worthington|Zoe Saldana|Sigourney Weaver|S...   \n",
       "director                                            James Cameron   \n",
       "genres                   Action|Adventure|Fantasy|Science Fiction   \n",
       "\n",
       "                                                             5067  \n",
       "budget                                                    6000000  \n",
       "revenue                                                         2  \n",
       "profit_earned                                            -5999998  \n",
       "original_title                                    Shattered Glass  \n",
       "popularity                                               0.462609  \n",
       "vote_count                                                     46  \n",
       "cast            Hayden Christensen|Peter Sarsgaard|ChloÃ« Sevi...  \n",
       "director                                                Billy Ray  \n",
       "genres                                              Drama|History  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#calling the function calculate to check on the revenue column \n",
    "calculate('revenue')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Again we see Avatar, it has not only the most profit earned but as well the best revenue. Whereas column 5067 Shattered Glass has only got a revenue of 2 Dollar. Again pay attention to the limits mentioned above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1919</th>\n",
       "      <th>1818</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>budget</th>\n",
       "      <td>160000000</td>\n",
       "      <td>1500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>revenue</th>\n",
       "      <td>825500000</td>\n",
       "      <td>56000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>profit_earned</th>\n",
       "      <td>665500000</td>\n",
       "      <td>-1444000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>original_title</th>\n",
       "      <td>Inception</td>\n",
       "      <td>Beautiful</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>popularity</th>\n",
       "      <td>9.36364</td>\n",
       "      <td>0.159638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vote_count</th>\n",
       "      <td>9767</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cast</th>\n",
       "      <td>Leonardo DiCaprio|Joseph Gordon-Levitt|Ellen P...</td>\n",
       "      <td>Deborra-Lee Furness|Peta Wilson|Aaron Jeffery|...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>director</th>\n",
       "      <td>Christopher Nolan</td>\n",
       "      <td>Dean O'Flaherty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>genres</th>\n",
       "      <td>Action|Thriller|Science Fiction|Mystery|Adventure</td>\n",
       "      <td>Drama|Mystery|Thriller</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                             1919  \\\n",
       "budget                                                  160000000   \n",
       "revenue                                                 825500000   \n",
       "profit_earned                                           665500000   \n",
       "original_title                                          Inception   \n",
       "popularity                                                9.36364   \n",
       "vote_count                                                   9767   \n",
       "cast            Leonardo DiCaprio|Joseph Gordon-Levitt|Ellen P...   \n",
       "director                                        Christopher Nolan   \n",
       "genres          Action|Thriller|Science Fiction|Mystery|Adventure   \n",
       "\n",
       "                                                             1818  \n",
       "budget                                                    1500000  \n",
       "revenue                                                     56000  \n",
       "profit_earned                                            -1444000  \n",
       "original_title                                          Beautiful  \n",
       "popularity                                               0.159638  \n",
       "vote_count                                                     10  \n",
       "cast            Deborra-Lee Furness|Peta Wilson|Aaron Jeffery|...  \n",
       "director                                          Dean O'Flaherty  \n",
       "genres                                     Drama|Mystery|Thriller  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#calling the function calculate to check on the vote column \n",
    "calculate('vote_count')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The most voted movie is Inception, the movie with the least votes is Beautiful, which was no financial success as well. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Research Question 3  Is there a correlation about the revuenue and a 'hidden recepie' - eg. what would be needed to predict the success of a film, is it maybe related to specific actors or a is a certain director indicating success in terms of votes or revenue?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "#function which will take any column as argument from and keep its track \n",
    "def data(column):\n",
    "    #seperating the string by '|'\n",
    "    data = treated[column].str.cat(sep = '|')\n",
    "    \n",
    "    #giving pandas series and storing the values separately\n",
    "    data = pd.Series(data.split('|'))\n",
    "    \n",
    "    #arranging in descending order\n",
    "    count = data.value_counts(ascending = False)\n",
    "    \n",
    "    return count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Robert De Niro       52\n",
       "Bruce Willis         46\n",
       "Samuel L. Jackson    44\n",
       "Nicolas Cage         43\n",
       "Matt Damon           36\n",
       "dtype: int64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the top 5 actors\n",
    "count = data('cast')\n",
    "#printing top 5 values\n",
    "count.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Robert De Niro, Bruce Willis and Samuel L. Jackson are the top actors according to the dataset. They are known for being actors in the Action Genre. This seems to be consistent to the Analysis above as the Action Genre is in the Top5 of Genres."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Steven Spielberg     28\n",
       "Clint Eastwood       24\n",
       "Ridley Scott         21\n",
       "Woody Allen          18\n",
       "Steven Soderbergh    17\n",
       "dtype: int64"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#checking the top 5 directors\n",
    "count = data('director')\n",
    "#printing top 5 values\n",
    "count.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I am not surprised, that Stephen Spielberg is in the Top 5 of directors :-). Clint Eastwood and Ridley Scott on the following places are known to produce Action movies."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>profit_earned</th>\n",
       "      <th>original_title</th>\n",
       "      <th>popularity</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>cast</th>\n",
       "      <th>director</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>1363528810</td>\n",
       "      <td>Jurassic World</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>5562</td>\n",
       "      <td>Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...</td>\n",
       "      <td>Colin Trevorrow</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>228436354</td>\n",
       "      <td>Mad Max: Fury Road</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>6185</td>\n",
       "      <td>Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...</td>\n",
       "      <td>George Miller</td>\n",
       "      <td>Action|Adventure|Science Fiction|Thriller</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200000000</td>\n",
       "      <td>2068178225</td>\n",
       "      <td>1868178225</td>\n",
       "      <td>Star Wars: The Force Awakens</td>\n",
       "      <td>11.173104</td>\n",
       "      <td>5292</td>\n",
       "      <td>Harrison Ford|Mark Hamill|Carrie Fisher|Adam D...</td>\n",
       "      <td>J.J. Abrams</td>\n",
       "      <td>Action|Adventure|Science Fiction|Fantasy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>190000000</td>\n",
       "      <td>1506249360</td>\n",
       "      <td>1316249360</td>\n",
       "      <td>Furious 7</td>\n",
       "      <td>9.335014</td>\n",
       "      <td>2947</td>\n",
       "      <td>Vin Diesel|Paul Walker|Jason Statham|Michelle ...</td>\n",
       "      <td>James Wan</td>\n",
       "      <td>Action|Crime|Thriller</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>155000000</td>\n",
       "      <td>440603537</td>\n",
       "      <td>285603537</td>\n",
       "      <td>Terminator Genisys</td>\n",
       "      <td>8.654359</td>\n",
       "      <td>2598</td>\n",
       "      <td>Arnold Schwarzenegger|Jason Clarke|Emilia Clar...</td>\n",
       "      <td>Alan Taylor</td>\n",
       "      <td>Science Fiction|Action|Thriller|Adventure</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      budget     revenue  profit_earned                original_title  \\\n",
       "0  150000000  1513528810     1363528810                Jurassic World   \n",
       "1  150000000   378436354      228436354            Mad Max: Fury Road   \n",
       "3  200000000  2068178225     1868178225  Star Wars: The Force Awakens   \n",
       "4  190000000  1506249360     1316249360                     Furious 7   \n",
       "6  155000000   440603537      285603537            Terminator Genisys   \n",
       "\n",
       "   popularity  vote_count                                               cast  \\\n",
       "0   32.985763        5562  Chris Pratt|Bryce Dallas Howard|Irrfan Khan|Vi...   \n",
       "1   28.419936        6185  Tom Hardy|Charlize Theron|Hugh Keays-Byrne|Nic...   \n",
       "3   11.173104        5292  Harrison Ford|Mark Hamill|Carrie Fisher|Adam D...   \n",
       "4    9.335014        2947  Vin Diesel|Paul Walker|Jason Statham|Michelle ...   \n",
       "6    8.654359        2598  Arnold Schwarzenegger|Jason Clarke|Emilia Clar...   \n",
       "\n",
       "          director                                     genres  \n",
       "0  Colin Trevorrow  Action|Adventure|Science Fiction|Thriller  \n",
       "1    George Miller  Action|Adventure|Science Fiction|Thriller  \n",
       "3      J.J. Abrams   Action|Adventure|Science Fiction|Fantasy  \n",
       "4        James Wan                      Action|Crime|Thriller  \n",
       "6      Alan Taylor  Science Fiction|Action|Thriller|Adventure  "
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtering to get the list of action movies \n",
    "action_movies = treated['genres'].str.contains('Action')\n",
    "treated[action_movies].head()\n",
    "df_red = pd.DataFrame (treated [action_movies])\n",
    "df_red.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1085 movies out of the data set are action movies."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>profit_earned</th>\n",
       "      <th>popularity</th>\n",
       "      <th>director</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>150000000</td>\n",
       "      <td>1513528810</td>\n",
       "      <td>1363528810</td>\n",
       "      <td>32.985763</td>\n",
       "      <td>Colin Trevorrow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>150000000</td>\n",
       "      <td>378436354</td>\n",
       "      <td>228436354</td>\n",
       "      <td>28.419936</td>\n",
       "      <td>George Miller</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200000000</td>\n",
       "      <td>2068178225</td>\n",
       "      <td>1868178225</td>\n",
       "      <td>11.173104</td>\n",
       "      <td>J.J. Abrams</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>190000000</td>\n",
       "      <td>1506249360</td>\n",
       "      <td>1316249360</td>\n",
       "      <td>9.335014</td>\n",
       "      <td>James Wan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>155000000</td>\n",
       "      <td>440603537</td>\n",
       "      <td>285603537</td>\n",
       "      <td>8.654359</td>\n",
       "      <td>Alan Taylor</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      budget     revenue  profit_earned  popularity         director\n",
       "0  150000000  1513528810     1363528810   32.985763  Colin Trevorrow\n",
       "1  150000000   378436354      228436354   28.419936    George Miller\n",
       "3  200000000  2068178225     1868178225   11.173104      J.J. Abrams\n",
       "4  190000000  1506249360     1316249360    9.335014        James Wan\n",
       "6  155000000   440603537      285603537    8.654359      Alan Taylor"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dropping columns\n",
    "finance= df_red[['budget', 'revenue','profit_earned','popularity','director', ]]\n",
    "finance.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>profit_earned</th>\n",
       "      <th>popularity</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>director</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>FrÃ©dÃ©ric Jardin</th>\n",
       "      <td>2500000.0</td>\n",
       "      <td>3358.0</td>\n",
       "      <td>-2496642.0</td>\n",
       "      <td>0.434506</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A.R. Murugadoss</th>\n",
       "      <td>9100000.0</td>\n",
       "      <td>76000000.0</td>\n",
       "      <td>66900000.0</td>\n",
       "      <td>0.215030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Aaron Norris</th>\n",
       "      <td>6000000.0</td>\n",
       "      <td>5093707.0</td>\n",
       "      <td>-906293.0</td>\n",
       "      <td>0.018196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Adam McKay</th>\n",
       "      <td>100000000.0</td>\n",
       "      <td>170432927.0</td>\n",
       "      <td>70432927.0</td>\n",
       "      <td>1.419224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Adam Rifkin</th>\n",
       "      <td>26000000.0</td>\n",
       "      <td>8009329.0</td>\n",
       "      <td>-17990671.0</td>\n",
       "      <td>0.528782</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         budget      revenue  profit_earned  popularity\n",
       "director                                                               \n",
       " FrÃ©dÃ©ric Jardin    2500000.0       3358.0     -2496642.0    0.434506\n",
       "A.R. Murugadoss       9100000.0   76000000.0     66900000.0    0.215030\n",
       "Aaron Norris          6000000.0    5093707.0      -906293.0    0.018196\n",
       "Adam McKay          100000000.0  170432927.0     70432927.0    1.419224\n",
       "Adam Rifkin          26000000.0    8009329.0    -17990671.0    0.528782"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#grouping by director and mean \n",
    "f2=finance.groupby(['director']).mean()\n",
    "f2.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We have 603 directors in the action genre, the amount is too high for a nice visualisaion, I concentrate on the top 10 better."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>budget</th>\n",
       "      <th>revenue</th>\n",
       "      <th>profit_earned</th>\n",
       "      <th>popularity</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>director</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Colin Trevorrow</th>\n",
       "      <td>150000000.0</td>\n",
       "      <td>1.513529e+09</td>\n",
       "      <td>1.363529e+09</td>\n",
       "      <td>32.985763</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Irwin Winkler</th>\n",
       "      <td>22000000.0</td>\n",
       "      <td>1.106280e+09</td>\n",
       "      <td>1.084280e+09</td>\n",
       "      <td>1.136610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sam Mendes</th>\n",
       "      <td>222500000.0</td>\n",
       "      <td>9.946178e+08</td>\n",
       "      <td>7.721178e+08</td>\n",
       "      <td>5.901934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Peter Jackson</th>\n",
       "      <td>144600000.0</td>\n",
       "      <td>8.967097e+08</td>\n",
       "      <td>7.521097e+08</td>\n",
       "      <td>5.904082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>George Lucas</th>\n",
       "      <td>89750000.0</td>\n",
       "      <td>7.997785e+08</td>\n",
       "      <td>7.100285e+08</td>\n",
       "      <td>5.537453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>J.J. Abrams</th>\n",
       "      <td>172500000.0</td>\n",
       "      <td>8.297685e+08</td>\n",
       "      <td>6.572685e+08</td>\n",
       "      <td>5.494517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>James Wan</th>\n",
       "      <td>105000000.0</td>\n",
       "      <td>7.616119e+08</td>\n",
       "      <td>6.566119e+08</td>\n",
       "      <td>4.902821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Christopher Nolan</th>\n",
       "      <td>186250000.0</td>\n",
       "      <td>8.206704e+08</td>\n",
       "      <td>6.344204e+08</td>\n",
       "      <td>7.455603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Joss Whedon</th>\n",
       "      <td>134800000.0</td>\n",
       "      <td>7.408658e+08</td>\n",
       "      <td>6.060658e+08</td>\n",
       "      <td>3.761224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Robert Stromberg</th>\n",
       "      <td>180000000.0</td>\n",
       "      <td>7.584104e+08</td>\n",
       "      <td>5.784104e+08</td>\n",
       "      <td>3.582315</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        budget       revenue  profit_earned  popularity\n",
       "director                                                               \n",
       "Colin Trevorrow    150000000.0  1.513529e+09   1.363529e+09   32.985763\n",
       "Irwin Winkler       22000000.0  1.106280e+09   1.084280e+09    1.136610\n",
       "Sam Mendes         222500000.0  9.946178e+08   7.721178e+08    5.901934\n",
       "Peter Jackson      144600000.0  8.967097e+08   7.521097e+08    5.904082\n",
       "George Lucas        89750000.0  7.997785e+08   7.100285e+08    5.537453\n",
       "J.J. Abrams        172500000.0  8.297685e+08   6.572685e+08    5.494517\n",
       "James Wan          105000000.0  7.616119e+08   6.566119e+08    4.902821\n",
       "Christopher Nolan  186250000.0  8.206704e+08   6.344204e+08    7.455603\n",
       "Joss Whedon        134800000.0  7.408658e+08   6.060658e+08    3.761224\n",
       "Robert Stromberg   180000000.0  7.584104e+08   5.784104e+08    3.582315"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#top 10 directors with most average profit\n",
    "f3= f2.sort_values(by='profit_earned', ascending=False)[:10]\n",
    "f3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x111f04860>"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a3315f400>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "f3.plot(kind='barh', stacked=True, figsize=[20,10], colormap='summer',title =\"Financial figures stacked by director\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Some statistical figures on the action movie genre as add-on after investigating to my original questions. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "56440442.8202765"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#evaluating the mean budget for action movies \n",
    "treated[action_movies][\"budget\"].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The average budget for an action movie is 56440442 Dollars (see limitation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32.985763"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#evaluating the max popularity  for action movies \n",
    "float(treated[action_movies][\"popularity\"].max())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "the maximum popularity for an action movie is 32.99 points. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.010334999999999999"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#evaluating the min popularity  for action movies \n",
    "float(treated[action_movies][\"popularity\"].min())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "the minumum popularity is 0.1 points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.5671160857142847"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#evaluating the mean popularity  for action movies \n",
    "float(treated[action_movies][\"popularity\"].mean())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "the average popularity is 1.57 points"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### little ad-on ;-) playing with the words of the film companies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "#define a function that counts the number of times each tagword appears: (reuse of function for movies and genres)\n",
    "def count_word2(df, ref_col):\n",
    "    keyword_count2 = dict()\n",
    "\n",
    "    for liste_keywords2 in df[ref_col].str.split('|'):\n",
    "        if type(liste_keywords2) == float and pd.isnull(liste_keywords2): continue\n",
    "        for s in liste_keywords2: \n",
    "            if pd.notnull(s): \n",
    "                if s in keyword_count2.keys():\n",
    "                    keyword_count2[s] += 1\n",
    "                else:\n",
    "                    keyword_count2[s] = 1\n",
    "                \n",
    "    # convert the dictionary in a list to sort the keywords  by frequency\n",
    "    keyword_occurences2 = []\n",
    "    for k,v in keyword_count2.items():\n",
    "        keyword_occurences2.append([k,v])\n",
    "    keyword_occurences2.sort(key = lambda x:x[1], reverse = True)\n",
    "    return keyword_occurences2, keyword_count2\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Universal Pictures</td>\n",
       "      <td>522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Warner Bros.</td>\n",
       "      <td>509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Paramount Pictures</td>\n",
       "      <td>431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Twentieth Century Fox Film Corporation</td>\n",
       "      <td>282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Columbia Pictures</td>\n",
       "      <td>272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>New Line Cinema</td>\n",
       "      <td>219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Metro-Goldwyn-Mayer (MGM)</td>\n",
       "      <td>218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Walt Disney Pictures</td>\n",
       "      <td>213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Touchstone Pictures</td>\n",
       "      <td>178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Columbia Pictures Corporation</td>\n",
       "      <td>160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>TriStar Pictures</td>\n",
       "      <td>147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Miramax Films</td>\n",
       "      <td>139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Relativity Media</td>\n",
       "      <td>108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Regency Enterprises</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Canal+</td>\n",
       "      <td>92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Village Roadshow Pictures</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>DreamWorks SKG</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>20th Century Fox</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>BBC Films</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Dimension Films</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>United Artists</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Orion Pictures</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Fox Searchlight Pictures</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Castle Rock Entertainment</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Working Title Films</td>\n",
       "      <td>67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Amblin Entertainment</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>StudioCanal</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Lionsgate</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Summit Entertainment</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Fox 2000 Pictures</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>Participant Media</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>Nu Image Films</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>American Zoetrope</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>Gaumont</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>New World Pictures</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>Marvel Studios</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>Studio Babelsberg</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>Vertigo Entertainment</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>Alcon Entertainment</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>Studio Canal</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>WWE Studios</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>France 2 CinÃ©ma</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>Anonymous Content</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>Screen Australia</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>Walt Disney Animation Studios</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>MTV Films</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>Nickelodeon Movies</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>Jerry Bruckheimer Films</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>Emmett/Furla Films</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>Hammer Film Productions</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>NPV Entertainment</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>Walden Media</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>TÃ©lÃ©film Canada</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>Dark Castle Entertainment</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Warner Premiere</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>Dino De Laurentiis Company</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>Mirage Enterprises</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>EuropaCorp</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>IM Global</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>Lipsync Productions</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>101 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          0    1\n",
       "0                        Universal Pictures  522\n",
       "1                              Warner Bros.  509\n",
       "2                        Paramount Pictures  431\n",
       "3    Twentieth Century Fox Film Corporation  282\n",
       "4                         Columbia Pictures  272\n",
       "5                           New Line Cinema  219\n",
       "6                 Metro-Goldwyn-Mayer (MGM)  218\n",
       "7                      Walt Disney Pictures  213\n",
       "8                       Touchstone Pictures  178\n",
       "9             Columbia Pictures Corporation  160\n",
       "10                         TriStar Pictures  147\n",
       "11                            Miramax Films  139\n",
       "12                         Relativity Media  108\n",
       "13                      Regency Enterprises   95\n",
       "14                                   Canal+   92\n",
       "15                Village Roadshow Pictures   88\n",
       "16                           DreamWorks SKG   88\n",
       "17                         20th Century Fox   88\n",
       "18                                BBC Films   87\n",
       "19                          Dimension Films   82\n",
       "20                           United Artists   76\n",
       "21                           Orion Pictures   72\n",
       "22                 Fox Searchlight Pictures   68\n",
       "23                Castle Rock Entertainment   68\n",
       "24                      Working Title Films   67\n",
       "25                     Amblin Entertainment   65\n",
       "26                              StudioCanal   65\n",
       "27                                Lionsgate   63\n",
       "28                     Summit Entertainment   62\n",
       "29                        Fox 2000 Pictures   58\n",
       "..                                      ...  ...\n",
       "71                        Participant Media   28\n",
       "72                           Nu Image Films   28\n",
       "73                        American Zoetrope   28\n",
       "74                                  Gaumont   28\n",
       "75                       New World Pictures   28\n",
       "76                           Marvel Studios   27\n",
       "77                        Studio Babelsberg   27\n",
       "78                    Vertigo Entertainment   27\n",
       "79                      Alcon Entertainment   27\n",
       "80                             Studio Canal   27\n",
       "81                              WWE Studios   27\n",
       "82                         France 2 CinÃ©ma   27\n",
       "83                        Anonymous Content   26\n",
       "84                         Screen Australia   26\n",
       "85            Walt Disney Animation Studios   25\n",
       "86                                MTV Films   25\n",
       "87                       Nickelodeon Movies   25\n",
       "88                  Jerry Bruckheimer Films   25\n",
       "89                       Emmett/Furla Films   24\n",
       "90                  Hammer Film Productions   24\n",
       "91                        NPV Entertainment   24\n",
       "92                             Walden Media   23\n",
       "93                        TÃ©lÃ©film Canada   23\n",
       "94                Dark Castle Entertainment   23\n",
       "95                          Warner Premiere   23\n",
       "96               Dino De Laurentiis Company   23\n",
       "97                       Mirage Enterprises   23\n",
       "98                               EuropaCorp   22\n",
       "99                                IM Global   22\n",
       "100                     Lipsync Productions   22\n",
       "\n",
       "[101 rows x 2 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#counting how many times each of word occur:\n",
    "keyword_occurences2, dum2 = count_word2(df, 'production_companies')\n",
    "\n",
    "#top mentioned production companies top 100\n",
    "companies = pd.DataFrame( keyword_occurences2)\n",
    "sliceObj = slice(0,101)\n",
    "companies[sliceObj]\n",
    "\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-0.5, 399.5, 199.5, -0.5)"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10ec55898>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#wordcloud\n",
    "# Read the whole text.\n",
    "text = str(companies)\n",
    "# Generate a word cloud image\n",
    "wordcloud = WordCloud().generate(text)\n",
    "\n",
    "# Display the generated image:\n",
    "plt.imshow(wordcloud, interpolation='bilinear')\n",
    "plt.axis(\"off\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='conclusions'></a>\n",
    "## Conclusions\n",
    "\n",
    "I found some limitations like described above. The entries are done by humans, which means we have the so called human factor and face some 'faulty' or missing entries. I is not certain if the budget and revenue data is really in Dollars like I assume. \n",
    "First I evaluated the most popular Genre, which is the Drama Genre. \n",
    "We face rows with no entries to budget and / or revenue. I decided to drop those rows which is of course influencing the average calculation for example. \n",
    "\n",
    "While diving into the financial data I find out, The movie Avatar is the most profitable movie in the data base and it has also the best revenue and has the lable Action in genres. \n",
    "As we have more than one label in the genre column we have an influence in the count of course. \n",
    "To my question about the hidden recepie I assume that making an Action movie with Robert de Niro (actor) and Stephen Spielberg (director) with an assumed average budget of 56440442 Dollars would be a success in terms of popularity, revenue and profit. Whereas when I concentrate on profit earned my choice of director would be Colin Trevorrow and as production comany to choose Universal Pictures. \n",
    "\n",
    "I have used different sources to support my investigation like the library documentation, material I have from DataCamp courses and google research on how to visualize. \n",
    "Used books: Eric Matthes, Python Crash Course and a German book: Einstieg in Python, Rheinwerk Verlag. I used Anconda, Jupyter Lab to perform the project. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
